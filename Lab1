<!DOCTYPE html>
<html>
  <head>
    <title>Laboratorio 1</title>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="estilos.css" />
  </head>
  <body>
    <h1>Laboratorio 1</h1>
    <h2>
      Introducción a las aplicaciones web, HTML5 y ciclo de vida de los sistemas
      de información
    </h2>
    <h3>Información de contacto</h3>
    <p>
      Lilian Rodríguez Uribe <br />
      A01711949 <br />
      A01911949@tec.mx
    </p>
    <h2>Preguntas</h2>
    <h3>¿Cuál es la diferencia entre Internet y la World Wide Web?</h3>
    <p>
      Internet es una inmensa red de computadoras alrededor de todo el mundo
      conectadas entre sí. En cambio, la web (la World Wide Web) es una enorme
      colección de páginas que se asienta sobre esa red de computadoras (BBC
      News Mundo, 2019).
    </p>

    <h3>¿Cuáles son las partes de un URL?</h3>
    <p>Protocolo, dominio, ruta, parámetros.</p>

    <h3>
      ¿Cuál es el propósito de los métodos HTTP: GET, HEAD, POST, PUT, PATCH,
      DELETE?
    </h3>
    <dl>
      <dt>GET</dt>
      <dd>
        Se usa este método de la misma manera que GET, pero con la diferencia de
        que la respuesta de un HEAD no debe contener un cuerpo, aunque incluirá
        los mismos encabezados que si se usara GET. Se utiliza para verificar si
        un recurso está disponible antes de hacer una solicitud GET.
      </dd>

      <dt>HEAD</dt>
      <dd>
        Este método se utiliza de la misma manera que GET, pero con la
        diferencia de que el return del método HEAD no debería contener cuerpo
        en la respuestas. Pero el return contiene los mismos encabezados como si
        se usara GET. Se utiliza el método HEAD para verificar si el recurso
        está presente.
      </dd>

      <dt>POST</dt>
      <dd>
        Se usa este método para enviar datos a un servidor con el fin de crear
        un recurso.
      </dd>

      <dt>PUT</dt>
      <dd>
        Se usa este método para actualizar un recurso existente en un servidor
        utilizando el contenido del cuerpo de la solicitud. Se puede pensar en
        este método como una forma de "editar" algo.
      </dd>

      <dt>PATCH</dt>
      <dd>
        Se usa este método para aplicar modificaciones parciales a un recurso.
      </dd>

      <dt>DELETE</dt>
      <dd>Se usa este método para eliminar un recurso específico.</dd>
    </dl>

    <h3>
      ¿Qué método HTTP se debe utilizar al enviar un formulario HTML, por
      ejemplo cuando ingresas tu usuario y contraseña en algún sitio? ¿Por qué?
    </h3>
    <p>
      POST, ya que a diferencia de GET, este método no muestra los datos en la
      URL.
    </p>

    <h3>
      ¿Qué método HTTP se utiliza cuando a través de un navegador web se accede
      a una página a través de un URL?
    </h3>
    <p>
      GET, ya que es un método seguro y que no modifica datos en el servidor,
      debido a que solo recupera información.
    </p>

    <h3>
      Un servidor web devuelve una respuesta HTTP con código 200. ¿Qué significa
      esto? ¿Ocurrió algún error?
    </h3>
    <p>
      No, no ocurrió ningún error, esta respuesta indica que la solicitud fue
      exitosa.
    </p>

    <h3>
      ¿Es responsabilidad del desarrollador corregir un sitio web si un usuario
      reporta que intentó acceder al sitio y se encontró con un error 404? ¿Por
      qué?
    </h3>
    <p>
      Depende cual sea la causa de este error, es decir, en ocaciones se recibe
      este mensaje de respuesta cuando el usuario escribió mal la URL, sin
      embargo, hay casos como páginas que fueron modificadas o eliminadas sin
      redirección, en este caso, sí es responsabilidad del desarrollador
      corregirlo.
    </p>

    <h3>
      ¿Es responsabilidad del desarrollador corregir un sitio web si un usuario
      reporta que intentó acceder al sitio y se encontró con un error 500? ¿Por
      qué?
    </h3>
    <p>
      Sí, este tipo de error indica un error en el servidor interno, por lo que
      el desarrollador tiene la responsabilidad de resolverlo.
    </p>

    <h3>
      ¿Qué significa que un atributo HTML5 esté depreciado o desaprobado
      (deprecated)? Menciona algunos elementos de HTML 4 que en HTML5 estén
      desaprobados.
    </h3>
    <p>
      Significa que su uso ya no se recomienda y podría ser eliminado en futuras
      versiones del estándar. Algunos ejemplos son font, center, big, small,
      acronym y frame.
    </p>

    <h3>¿Cuáles son las diferencias principales entre HTML 4 y HTML5?</h3>
    <p>
      HTML introdujo mejoras significativas como nuevas etiquetas semánticas
      (header, nav, article, section), formularios mejorados, la eliminación de
      elementos obsoletos como font, center, frameset o applet, entre varias
      otras mejoras que hacen a HTML5 más semántico, moderno y potente.
    </p>

    <h3>¿Cuáles son las diferencias principales entre HTML 4 y HTML5?</h3>
    <p>
      HTML introdujo mejoras significativas como nuevas etiquetas semánticas
      (header, nav, article, section), formularios mejorados, la eliminación de
      elementos obsoletos como font, center, frameset o applet, entre varias
      otras mejoras que hacen a HTML5 más semántico, moderno y potente.
    </p>

    <h3>¿Qué componentes de estructura y estilo tiene una tabla?</h3>
    <p>
      Una tabla HTML (table) es un conjunto de celdas (td o th) organizadas en
      filas (tr) que a su vez se pueden organizar en grupos de filas (thead,
      tbody o tfoot). Además, la tabla puede tener una leyenda (caption) y hacer
      referencia a las columnas (col y colspan).
    </p>

    <h3>¿Cuáles son los principales controles de una forma HTML5?</h3>
    <p>
      Los tipos de entrada comunes son button, checkbox, file, hidden, image,
      password, radio, reset, submit y text.
    </p>

    <h3>¿Qué tanto soporte HTML5 tiene el navegador que utilizas?</h3>
    <p>525/555 (Google Chrome)</p>

    <h3>
      Sobre el ciclo de vida y desarrollo de los sistemas de información: ¿Cuál
      es el ciclo de vida de los sistemas de información?
    </h3>
    <p>
      El ciclo de vida de un sistema de información comprende una serie de
      etapas entre las que se encuentran planificación, análisis, diseño,
      implementación, pruebas, instalación o despliegue, uso y mantenimiento.
    </p>

    <h3>
      Sobre el ciclo de vida y desarrollo de los sistemas de información: ¿Cuál
      es el ciclo de vida de los sistemas de información?
    </h3>
    <p>
      El ciclo de vida de un sistema de información comprende una serie de
      etapas entre las que se encuentran planificación, análisis, diseño,
      implementación, pruebas, instalación o despliegue, uso y mantenimiento.
    </p>

    <h3>
      Como ingeniero de software ¿cuál es tu recomendación sobre el uso de
      !important en un CSS?
    </h3>
    <p>
      Desde lo que he visto hasta ahora, !important es una forma de forzar a que
      un estilo se aplique, mi recomendación sería evitar usarlo en medida de lo
      posible, ya que puede hacer que el código sea más difícil de entender y
      mantener, aunque sé que hay casos donde es necesario usarlo, intentaría
      usarlo con moderación y solo cuando se requiera realmente.
    </p>

    <h3>
      Si se pone una imagen de fondo en una página HTML, ¿por qué debe escogerse
      con cuidado?
    </h3>
    <p>
      Porque podía ser muy pesada y afectar el rendimiento de la página. Además
      debe tener un color y constrate adecuados para que el texto y otros
      elementos de la página sean legibles. Así como también debe adaptarse a
      diferentes dispositivos y tamaños de pantalla.
    </p>

    <h3>
      Como ingeniero de software, ¿cuál es tu recomendación al elegir las
      unidades de un propiedad de estilo entre %, px y pt?
    </h3>
    <p>
      Yo recomendaría usar % para propiedades como width, height, margin o
      padding, ya que es útil para crear diseños responsivos que se puedan
      adaptar al tamaño de la pantalla. Px lo utilizaría para propiedades que
      requieran un tamaño fijo y preciso como border-width o font-size. Por su
      parte, pt es útil para propiedades relacionadas con la tipografía, por lo
      que creo que es más apto para impresion que para diseño web.
    </p>

    <h3>
      ¿Por qué el uso de una versión minimizada del CSS mejora el rendimiento
      del sitio?
    </h3>
    <p>
      Porque esto reduce el tamaño del archivo, lo que a su vez mejora el
      rendimiento de la página. Menos código implica un tiempo de descarga
      menor, esto optimiza la experiencia del usuario, aunque en ocasiones sea
      por unidades de tiempo que este no alcance a percibir.
    </p>

    <h2>Referencias bibliograficas</h2>
    <ol>
      <li>
        Aviani, G. (2019). An introduction to HTTP: everything you need to know.
        freeCodeCamp.
        https://www.freecodecamp.org/news/http-and-everything-you-need-to-know-about-it/
      </li>
      <li>
        Ramos, C. (2022). HTTP Request Methods – Get vs Put vs Post Explained
        with Code Examples. freeCodeCamp.
        https://www.freecodecamp.org/news/http-request-methods-explained/
      </li>
      <li>
        Copes, F. (2019). The HTML Handbook – Learn HTML for Beginners.
        freeCodeCamp.
        https://www.freecodecamp.org/news/the-html-handbook/#heading-tables
      </li>
      <li>
        The HTML5 test - How well does your browser support HTML5? (n.d.).
        HTML5test.com. https://html5test.com/
      </li>
      <li>
        Bartolomé, M. (2022). Estructura de una tabla.
        https://www.mclibre.org/consultar/htmlcss/html/html-tablas.html
      </li>
      <li>
        Controles de formulario originales - Aprende desarrollo web | MDN.
        (n.d.). MDN Web Docs.
        https://developer.mozilla.org/es/docs/Learn_web_development/Extensions/Forms/Basic_native_form_controls
      </li>
      <li>
        Controles de formulario originales - Aprende desarrollo web | MDN.
        (n.d.). MDN Web Docs.
        https://developer.mozilla.org/es/docs/Learn_web_development/Extensions/Forms/Basic_native_form_controls
      </li>
    </ol>
  </body>
</html>
