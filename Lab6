<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Validador de Contraseñas Mejorado</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Segoe UI", sans-serif;
      }

      body {
        display: flex;
        justify-content: center;
        align-items: center;
        background: #1a1a2e;
        padding: 20px;
      }

      .container {
        background: rgba(255, 255, 255, 0.95);
        padding: 2rem;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        width: 100%;
        max-width: 450px;
      }

      h1 {
        text-align: center;
        color: #1a1a2e;
        margin-bottom: 2rem;
        transition: font-style 0.3s ease, color 0.3s ease;
      }

      h1:hover {
        font-family: serif;
        font-size: 2.18rem;
        color: #6b90ba;
      }

      .input-group {
        margin-bottom: 1.5rem;
        position: relative;
      }

      input {
        width: 100%;
        padding: 0.8rem;
        border: 2px solid #ddd;
        border-radius: 8px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
      }

      label {
        color: #484848;
        margin-bottom: 0.5rem;
        display: block;
      }

      .strength-meter {
        height: 5px;
        background: #ddd;
        border-radius: 3px;
        margin-top: 0.5rem;
      }

      .strength-fill {
        height: 100%;
        width: 0;
        transition: width 0.3s ease, background-color 0.3s ease;
      }

      .requirements {
        font-size: 0.9rem;
        color: #666;
        margin-top: 0.5rem;
      }

      .requirement {
        padding: 0.2rem 0;
        transition: color 0.3s ease;
      }

      .requirement.valid {
        color: #2ecc71;
      }

      .match-status {
        text-align: center;
        padding: 0.5rem;
        margin-top: 1rem;
        border-radius: 5px;
        opacity: 0;
        transition: opacity 0.3s ease;
      }

      .match {
        background: #dff0d8;
        color: #3c763d;
        opacity: 1;
      }

      .no-match {
        background: #f2dede;
        color: #a94442;
        opacity: 1;
      }

      .toggle-password {
        position: absolute;
        right: 10px;
        top: 45px;
        cursor: pointer;
        color: #666;
      }

      .tooltip {
        position: absolute;
        background: #493d60;
        color: white;
        padding: 0.5rem;
        border-radius: 5px;
        font-size: 0.8rem;
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
        left: 100%;
        margin-left: 10px;
        top: 50%;
        transform: translateY(-50%);
        width: 200px;
      }

      .input-group:hover .tooltip {
        opacity: 1;
      }

      .qa-section,
      .references {
        margin-top: 2rem;
        font-size: 0.9rem;
        color: #666;
      }

      .qa-section h3,
      .references h3 {
        color: #1a1a2e;
        margin-bottom: 1rem;
      }

      .qa-section p {
        margin-bottom: 1rem;
      }

      .references a {
        color: #4a90e2;
        text-decoration: none;
      }

      .references a:hover {
        text-decoration: underline;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Validador de Contraseñas</h1>
      <form id="passwordForm">
        <div class="input-group">
          <label for="password">Contraseña</label>
          <input type="password" id="password" required />
          <span class="toggle-password" onclick="togglePassword('password')"
            >◠</span
          >
          <div class="tooltip">
            Usa una combinación de letras, números y símbolos para mayor
            seguridad
          </div>
          <div class="strength-meter">
            <div class="strength-fill"></div>
          </div>
          <div class="requirements">
            <div class="requirement" data-check="length">
              ✓ Mínimo 8 caracteres
            </div>
            <div class="requirement" data-check="uppercase">
              ✓ Al menos una mayúscula
            </div>
            <div class="requirement" data-check="number">
              ✓ Al menos un número
            </div>
            <div class="requirement" data-check="special">
              ✓ Al menos un carácter especial
            </div>
          </div>
        </div>
        <div class="input-group">
          <label for="confirmPassword">Confirmar Contraseña</label>
          <input type="password" id="confirmPassword" required />
          <span
            class="toggle-password"
            onclick="togglePassword('confirmPassword')"
            >◠</span
          >
          <div class="tooltip">
            Asegúrate de que coincida exactamente con la contraseña anterior
          </div>
        </div>
        <div class="match-status" id="matchStatus"></div>
      </form>

      <div class="qa-section">
        <h3>Preguntas y Respuestas</h3>
        <p>
          <strong
            >¿Por qué es una buena práctica usar JavaScript para checar que sean
            válidos los inputs de las formas antes de enviar los datos al
            servidor?</strong
          ><br />
          Es una buena práctica porque mejora la experiencia del usuario al
          proporcionar retroalimentación inmediata sin esperar una respuesta del
          servidor. Reduce la carga en el servidor al evitar envíos innecesarios
          de datos inválidos y permite corregir errores en tiempo real,
          ahorrando tiempo y recursos.
        </p>

        <p>
          <strong
            >¿Cómo puedes saltarte la seguridad de validaciones hechas con
            JavaScript?</strong
          ><br />
          Las validaciones de JavaScript se pueden saltar porque se ejecutan en
          el cliente. Por ejemplo, se puede desactivar JavaScript en el
          navegador, modificar el código HTML/JS en las herramientas de
          desarrollo, o enviar datos directamente al servidor ignorando el
          formulario.
        </p>

        <p>
          <strong
            >Si te puedes saltar la seguridad de las validaciones de JavaScript,
            entonces ¿por qué la primera pregunta dice que es una buena
            práctica?</strong
          ><br />
          Aunque se pueden bypassar, sigue siendo una buena práctica porque
          actúa como una primera línea de defensa y mejora la usabilidad. Sin
          embargo, no debe ser la única validación; las validaciones en el
          servidor son esenciales para la seguridad. JavaScript es para
          conveniencia del usuario, mientras que el servidor garantiza la
          integridad de los datos.
        </p>
      </div>

      <div class="references">
        <h3>Fuentes Consultadas:</h3>
        <ul>
          <li>
            <a
              href="https://www.w3schools.com/howto/howto_js_password_validation.asp"
              target="_blank"
              >How TO - Password Validation</a
            >
          </li>
          <li>
            <a
              href="https://www.w3schools.com/jsref/prop_style_fontstyle.asp"
              target="_blank"
              >Style fontStyle Property</a
            >
          </li>
          <li>
            <a
              href="https://www.w3schools.com/cssref/pr_font_font-size.php"
              target="_blank"
              >CSS font-size Property</a
            >
          </li>
          <li>
            <a href="https://www.w3schools.com/css/css_font.asp" target="_blank"
              >CSS Fonts</a
            >
          </li>
          <li>
            <a
              href="https://www.freecodecamp.org/news/what-is-the-dom-document-object-model-meaning-in-javascript/"
              target="_blank"
              >What is the DOM? Document Object Model Meaning in JavaScript</a
            >
          </li>
          <li>
            <a
              href="https://www.freecodecamp.org/news/what-is-the-dom-document-object-model-meaning-in-javascript/"
              target="_blank"
              >What is the DOM? Document Object Model Meaning in JavaScript</a
            >
          </li>
          <li>
            <a
              href="https://dev.to/sharathchandark/password-validation-check-in-html-css-javascript-show-hide-password-toggle-4d7c"
              target="_blank"
              >Password Validation Check in HTML CSS & JavaScript | Show Hide
              Password Toggle</a
            >
          </li>
        </ul>
      </div>
    </div>

    <script>
      const passwordInput = document.getElementById("password");
      const confirmInput = document.getElementById("confirmPassword");
      const strengthFill = document.querySelector(".strength-fill");
      const matchStatus = document.getElementById("matchStatus");
      const requirements = document.querySelectorAll(".requirement");

      const checks = {
        length: /.{8,}/,
        uppercase: /[A-Z]/,
        number: /\d/,
        special: /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/,
      };

      function updatePasswordStrength() {
        const password = passwordInput.value;
        let strength = 0;

        requirements.forEach((req) => {
          const check = req.dataset.check;
          const isValid = checks[check].test(password);
          req.classList.toggle("valid", isValid);
          if (isValid) strength += 25;
        });

        strengthFill.style.width = `${strength}%`;
        if (strength <= 25) {
          strengthFill.style.backgroundColor = "#e74c3c";
        } else if (strength <= 50) {
          strengthFill.style.backgroundColor = "#e67e22";
        } else if (strength <= 75) {
          strengthFill.style.backgroundColor = "#f1c40f";
        } else {
          strengthFill.style.backgroundColor = "#2ecc71";
        }

        checkPasswordMatch();
      }

      function checkPasswordMatch() {
        const password = passwordInput.value;
        const confirm = confirmInput.value;

        if (password && confirm) {
          if (password === confirm) {
            matchStatus.textContent = "¡Las contraseñas coinciden!";
            matchStatus.classList.remove("no-match");
            matchStatus.classList.add("match");
          } else {
            matchStatus.textContent = "Las contraseñas no coinciden";
            matchStatus.classList.remove("match");
            matchStatus.classList.add("no-match");
          }
        } else {
          matchStatus.classList.remove("match", "no-match");
        }
      }

      function togglePassword(inputId) {
        const input = document.getElementById(inputId);
        input.type = input.type === "password" ? "text" : "password";
      }

      passwordInput.addEventListener("input", updatePasswordStrength);
      confirmInput.addEventListener("input", checkPasswordMatch);

      document
        .getElementById("passwordForm")
        .addEventListener("submit", (e) => {
          e.preventDefault();
          if (
            passwordInput.value === confirmInput.value &&
            Object.values(checks).every((check) =>
              check.test(passwordInput.value)
            )
          ) {
            alert("¡Contraseña válida y confirmada!");
          }
        });
    </script>
  </body>
</html>
